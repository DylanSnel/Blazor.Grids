@using Excubo.Blazor.Grids.__Internal
@using System.Globalization 
<Stylesheet Src="_content/Excubo.Blazor.Grids/style.min.css" />
<div style="display: grid;
            position: relative;
            @(column_definitions.Any() ? ("grid-template-columns: " + string.Join(" ", column_definitions.Select(d => d.Width))): "");
            @(row_definitions.Any() ? ("grid-template-rows: " + string.Join(" ", row_definitions.Select(d => d.Height))) : "");
            @(areas.Any() ? ("grid-template-areas: " + AreaString) : "");
            grid-column-gap: @ColumnGap;
            grid-row-gap: @RowGap;
            @additional_style"
     @attributes="@additional_attribues_without_style"
     @ref="Area">
    <CascadingValue Value="this" IsFixed="true">
        @ChildContent
        <MovingIndicatorOverlay @ref="MovingIndicatorOverlay" />
    </CascadingValue>
    @if (AutoRows && elements.Any())
    {
        var n_rows = elements.Max(e => e.Row + Math.Max(1, e.RowSpan) - 1);
        var padding_bottom = 100.0 / AspectRatio.Value;
        var padding_bottom_s = padding_bottom.ToString(CultureInfo.InvariantCulture) + "%";
        for (int i = 0; i < n_rows; ++i)
        {
            <div style="grid-row: @(i + 1); padding-bottom: @padding_bottom_s" />
        }
    }
</div>

@code {
    internal ElementReference Area;
    internal MovingIndicatorOverlay MovingIndicatorOverlay;
}
