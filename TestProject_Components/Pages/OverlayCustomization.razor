@page "/overlay_customization"
    The branding of your app might require different colors. In this demo, we modify the color of the overlay that appears when elements are <a href="movable_elements">moved</a> or <a href="resizable_elements">resized</a>.

    <Grid AspectRatio="1.5" AllowMove="true" AllowResize="true" style="height: 100%">
        <MoveResizeOverlaySettings Color="(0x10, 0x10, 0x40)" Opacity="0xdd" />
        <Rows Count="10" Height="1fr" />
        <Columns Count="4" Width="1fr" />
        @foreach (var element in elements)
        {
            <Element @bind-Row="element.Row" @bind-Column="element.Column" @bind-RowSpan="element.RowSpan" @bind-ColumnSpan="element.ColumnSpan" Title="@element.Color">
                <div style="height: 100%; width: 100%; background-color: @(element.Color)"></div>
            </Element>
        }
    </Grid>

    @code {
        public class ElementDefinition
        {
            public int Row { get; set; }
            public int Column { get; set; }
            public int RowSpan { get; set; }
            public int ColumnSpan { get; set; }
            public string Color { get; set; }
        }
        private List<ElementDefinition> elements = new List<ElementDefinition>
    {
        new ElementDefinition { Row = 0, Column = 0, Color = "purple" },
        new ElementDefinition { Row = 0, Column = 1, Color = "gray" },
        new ElementDefinition { Row = 1, Column = 0, Color = "pink" },
        new ElementDefinition { Row = 1, Column = 1, Color = "green" },
        new ElementDefinition { Row = 2, Column = 1, ColumnSpan = 3, Color = "cyan" },
        new ElementDefinition { Row = 1, Column = 2, RowSpan = 3, Color = "#88884488" }
    };
    }
